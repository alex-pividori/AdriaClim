#
%manual
%include <man/master_graph.man>
%end


%include <head_4_bash.h>                                # Include header common to all tasks. 
                                                        # It manages general calls to ecflow client
%include <etc/general.ini>

#*************** charging modules ************

module load $python_module   &>/dev/null
module load $r_module        &>/dev/null

#==============================================

output_files_dir="$output_validation_plots"
output_files_dir_s="\"$output_validation_plots\""

pre_initialization_file="$init_file_dir/pre_initialization_file.txt"

#============================= Check =============================

if [ -d $tmp_dir_root ]; then
    cd  $tmp_dir_root
    echo -e "Passage to \"$tmp_dir_root\" happened with success"
else
    echo -e "ERROR: Passage to \"$tmp_dir_root\" can't be executed cause the directory doesn't exists"
    EXIT_STATUS=$?
    exit $EXIT_STATUS
fi

if [ -d $output_validation_plots ]; then
    echo -e "The directory \"$output_validation_plots\"  exists"
else
    mkdir -p $output_validation_plots
    echo  -e "\t\n The directory \"$output_validation_plots\" has been correctly created"
fi

#==================================================================

i=1   # starts from first line

while IFS=";" read   f1  f2
do

    # period variable is used only to be inserted in the graph title
    # so it's form fave to be human-readable

    case $f2 in
	season1)
        period="Jan-Feb-Mar"
	;;
	season2)
        period="Apr-May-Jun"
	;;
	season3)
        period="Jul-Aug-Sep"
	;;
	season4)
        period="Oct-Nov-Dec"
	;;
        1S)
        period="Jan to Jun"
        ;;
        2S)
        period="Jul to Dec"
        ;;
        tot)
        period="Annual"
        ;;
        *)
        t1=${f2%%%%T*}   # all what is first the first "T": the strarting date (not time)
        t22=${f2##*_} 
        t2=${t22%%T*}
        period="$t1 to $t2"       
        ;;
    esac

    echo -e "\n\t The considered time period is:$period"

    place=$f1
    depths_dir="selected_depths_$i"
    depths_dir_s="\"selected_depths_$i\""
    drops_dir="drops_files_$i"
    drops_dir_s="\"drops_files_$i\""

    files_list_s="\"$drops_dir/list_files_TEMP_PSAL.txt\""

    #============================================================
    #                       ECDF_diagram
    #============================================================

    if [ %PLOT_TYPE% == "ECDF_PY" ]; then

        echo -e "Python script for ECDF Temp and Sal plot is now starting \n"

        python arpae_ecdf_T_NEMO.py  "$place" "$period" "$f2" "$depths_dir" "$output_files_dir"
        python arpae_ecdf_S_NEMO.py  "$place" "$period" "$f2" "$depths_dir" "$output_files_dir"

        echo -e "Python script for ECDF Temp and Sal plot is just finished \n"

    fi

    #============================================================
    #                     Analysis for CSV
    #============================================================

    if [ %PLOT_TYPE% == "analysis_PY" ]; then

       echo -e "Python script for statistical analysis of Temp and Sal is now starting. A csv file will be created.\n"

        python arpae_statistic_analysis_for_csv_T.py  "$place" "$period" "$f2" "$depths_dir" "$output_files_dir"
        python arpae_statistic_analysis_for_csv_S.py  "$place" "$period" "$f2" "$depths_dir" "$output_files_dir"

        echo -e "Python script for statistical analysis Temp and Sal plot is just finished \n"

    fi

    #============================================================
    #                       boxplot_R  
    #============================================================

    if [ %PLOT_TYPE% == "boxplot_R" ]; then

        echo -e "R boxplot script for temperature is now starting \n"

        Rscript arpae_boxplot_delta_T_val.r    "$place" "$period" "$f2" "$depths_dir" "$output_files_dir"

        echo -e "R boxplot script for salinity is now starting \n"

        Rscript arpae_boxplot_delta_S_val.r    "$place" "$period" "$f2" "$depths_dir" "$output_files_dir"

        echo -e "R scripts for temperature and salinity are just finished \n"

    fi

    #============================================================
    #                       Taylor_Diagram_R
    #============================================================

    if [ %PLOT_TYPE% == "taylor_R" ]; then

        echo -e "R Taylor Diagram script for temperature is now starting \n"

        Rscript arpae_taylor_diagram_temp.r     "$place" "$period" "$depths_dir" "$output_files_dir"

        echo -e "R Taylor Diagram script for salinity is now starting \n"

        Rscript arpae_taylor_diagram_sal.r      "$place" "$period" "$depths_dir" "$output_files_dir"

        echo -e "R scripts for temperature and salinity are just finished \n"

    fi

    #============================================================

    (( i=i+1 ))
  
done < $pre_initialization_file
 
echo -e "\n\tThe task is now finished\n"

mail -s 'Finita la suite.' alex.pividori@yahoo.it <<< 'NEMO_validation_arpae suite is finished.'

EXIT_STATUS=$?
echo -e "\n\tExecution completed with EXIT_STATUS=${EXIT_STATUS}\n\n"

%include <tail_4_bash.h>               # Include tail common to all tasks. 
                                       # It manages general calls to ecflow client
