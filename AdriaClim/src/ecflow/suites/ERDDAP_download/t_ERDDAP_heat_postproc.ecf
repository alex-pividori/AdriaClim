# ******************************************************************************
#                                    TASK
#                   To be used in the frame of "ecFlow" suites
#            (https://confluence.ecmwf.int/display/ECFLOW/ecflow+home)
# ******************************************************************************
#
#  DESCRIPTION:    this "ecFlow" task is aimed at post-processing ERDDAP's
#                  meteorological "heat" data files, in order to make them
#                  suitable for the SHYFEM model.
#
#  EXTERNAL CALLS: none.
#
#  EXTERNAL FILES: - header managing general calls to "ecFlow" client;
#                  - suite's initialisation file;
#                  - tail managing general calls to "ecFlow" client.
#
#  DEVELOPER:      Alessandro Minigher (alessandro.minigher@arpa.fvg.it)
#                  ARPA FVG - S.O.C. Osmer e GRN - S.O.S. Qualit√† dell'aria
#
#  CREATION DATE:  2022-11-11.
#
#  MODIFICATIONS:  none.
#
#  VERSION:        0.1.
#
# ******************************************************************************

# Include header common to all tasks, managing general calls to "ecFlow" client
%include <head_4_bash.h>
# Include the function managing the PBS queue job submission
%include <qsub_4_bash.h>
# Suite's initialisation file
%include <etc/ERDDAP_download.ini>

#  --- START OF MAIN ---

# Inform the user about the current directory
echo -e "\tCurrent directory: $(pwd).\n"

# Create the desired temporary (working) directory, if not existent, move into
# it and inform the user
if [[ ! -d "${SCRATCH_ERDDAP_DOWNLOAD_DIR_TMP['%VAR%']}" ]]; then mkdir -p "${SCRATCH_ERDDAP_DOWNLOAD_DIR_TMP['%VAR%']}"; fi
echo -e "\tChange directory: moving to ${SCRATCH_ERDDAP_DOWNLOAD_DIR_TMP['%VAR%']}..."; cd "${SCRATCH_ERDDAP_DOWNLOAD_DIR_TMP['%VAR%']}"
echo -e "\tCurrent directory: $(pwd).\n"

# Define the default status for the submission of the desired job script
# (OKKO=0 -> all went OK; OKKO=1 -> something went KO)
OKKO=0

# Define the basename of the job to be run, starting from that of its related
# template (provided in the initialisation file)
JOB="${JOB_HEAT_NC2FEM_TPL##*/}"   # consider the basename only
JOB="${JOB//.tpl/}"                  # remove the ".tpl" extension

# Define the following information (family variables are employed):
#  - basename of the final, post-processed file
SHY_OUT_FILE="${SHY_OUT_FILE['%VAR%']}"
#  - basename of the final, post-processed file (NetCDF extension)
SHY_OUT_NC_FILE="${SHY_OUT_FILE%%.*}.nc"
#  - string to be employed with the "-vars" option of the "nc2fem" SHYFEM's
#    routine
NC2FEM_DESCRP="${NC2FEM_DESCRP['%VAR%']}"
#  - string to be employed with the "-vars" option of the "nc2fem" SHYFEM's
#    routine
NC2FEM_VARS="${NC2FEM_VARS['%VAR%']}"
#  - full path of the meteorological "heat" downloaded files
T2M_FILE="${SCRATCH_ERDDAP_DOWNLOAD_DIR_TMP['T_2m']}/${ERDDAP_OUT_FILE['T_2m']}"
SW_FILE="${SCRATCH_ERDDAP_DOWNLOAD_DIR_TMP['SW_d']}/${ERDDAP_OUT_FILE['SW_d']}"
Q2M_FILE="${SCRATCH_ERDDAP_DOWNLOAD_DIR_TMP['q_2m']}/${ERDDAP_OUT_FILE['q_2m']}"
TCC_FILE="${SCRATCH_ERDDAP_DOWNLOAD_DIR_TMP['tcc']}/${ERDDAP_OUT_FILE['tcc']}"

# Create the job to be run, starting from its related template, by the use of a
# "sedfile"
SEDFILE="$(mktemp -u ./sedfile.XXXXX)"
cat <<EOF > $SEDFILE
    s/%%%%JOB_P%%%%/$JOB_P/g
    s/%%%%JOB_W_umask%%%%/$JOB_W_umask/g
    s/%%%%JOB_W_block%%%%/$JOB_W_block/g
    s/%%%%JOB_N%%%%/$JOB_HEAT_NC2FEM_TPL_N/g
    s/%%%%JOB_o%%%%/$JOB_HEAT_NC2FEM_TPL_o/g
    s/%%%%JOB_e%%%%/$JOB_HEAT_NC2FEM_TPL_e/g
    s/%%%%JOB_q%%%%/$JOB_q/g
    s/%%%%JOB_l_nodes%%%%/$JOB_HEAT_NC2FEM_TPL_l_nodes/g
    s/%%%%JOB_l_ppn%%%%/$JOB_HEAT_NC2FEM_TPL_l_ppn/g
    s/%%%%JOB_l_walltime%%%%/$JOB_HEAT_NC2FEM_TPL_l_walltime/g
    s/%%%%JOB_m%%%%/$JOB_m/g
    s/%%%%JOB_M%%%%/$JOB_M/g
    s/%%%%CDO_MOD%%%%/${CDO_MOD//\//\\/}/g
    s/%%%%SHY_MOD%%%%/${SHY_MOD//\//\\/}/g
    s/%%%%SHY_OUT_FILE%%%%/${SHY_OUT_FILE//\//\\/}/g
    s/%%%%SHY_OUT_NC_FILE%%%%/${SHY_OUT_NC_FILE//\//\\/}/g
    s/%%%%T2M_FILE%%%%/${T2M_FILE//\//\\/}/g
    s/%%%%SW_FILE%%%%/${SW_FILE//\//\\/}/g
    s/%%%%Q2M_FILE%%%%/${Q2M_FILE//\//\\/}/g
    s/%%%%TCC_FILE%%%%/${TCC_FILE//\//\\/}/g
    s/%%%%NC2FEM_DESCRP%%%%/$NC2FEM_DESCRP/g
    s/%%%%NC2FEM_VARS%%%%/$NC2FEM_VARS/g
EOF
sed -f $SEDFILE $JOB_HEAT_NC2FEM_TPL > $JOB
# Check the outcome of the creation of the job and if the job itself exists:
#  - if all went OK and the job exists
if [[ $? -eq 0 ]] && [[ -e $JOB ]]; then
    # Inform the user
    echo -e "\tJob: ${JOB} successfully created. Submitting to HPC queues..."
#  - if something went KO or the job does not exist
else
    # Inform the user and abort
    echo -e "\tERROR! Job: ${JOB} unsuccessfully created. ABORT..."; ERROR
fi

# Submit the job to HPC queues
ecflow_qsub $JOB || OKKO=1
# Check the outcome of the submission:
#  - if all went OK
if [[ OKKO -eq 0 ]]; then
    # Inform the user
    echo -e "\tJob: ${JOB} successfully submitted to HPC queues."
#  - if something went KO
else
    # Inform the user and abort
    echo -e "\tERROR! Job: ${JOB} unsuccessfully submitted to HPC queues. ABORT..."; ERROR
fi

# If the job exists
if [[ -e $JOB ]]; then
    # Remove it and inform the user
    rm $JOB; echo -e "\tJob: ${JOB} removed.\n"
fi

# If the "sedfile" exists
if [[ -e $SEDFILE ]]; then
    # Remove it and inform the user
    rm $SEDFILE; echo -e "\tFile: ${SEDFILE} removed."
fi

#  --- END OF MAIN ---

# Include tail common to all tasks, managing general calls to "ecFlow" client
%include <tail_4_bash.h>
