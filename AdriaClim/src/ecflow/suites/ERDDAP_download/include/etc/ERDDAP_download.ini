# ******************************************************************************
#                              INITIALISATION FILE
#                   To be used in the frame of "ecFlow" suites
#            (https://confluence.ecmwf.int/display/ECFLOW/ecflow+home)
# ******************************************************************************
#
#  DESCRIPTION:      this initialisation file is aimed at defining the
#                    environment of BASH scripts, run in the frame of "ecFlow"
#                    tasks.
#                    It is dedicated to the download of data from the ERDDAP
#                    data server of the "Centro Euro-Mediterraneo sui
#                    Cambiamenti Climatici" (CMCC).
#                    Moreover, it should be placed in the "include/etc"
#                    directory of the belonging suite.
#
#                    This initialisation file is characterized by the following
#                    sections:
#
#                     - DOWNLOAD CONFIGURATION;
#                     - PATHS of DIRECTORIES;
#                     - JOBS;
#                     - ENVIRONMENTAL MODULES.
#
#  DEVELOPER:        Alessandro Minigher (alessandro.minigher@arpa.fvg.it)
#                    ARPA FVG - S.O.C. Osmer e GRN - S.O.S. Qualità dell'aria
#
#  CREATION DATE:    2022-11-09.
#
#  MODIFICATIONS:    none.
#
#  VERSION:          0.1.
#
# ******************************************************************************

# **************************
# * DOWNLOAD CONFIGURATION *
# **************************

#  === CREDENTIALS ===

# Credentials to access AdriaClim's ERDDAP products:
#  - username
ERDDAP_USERNAME="alessandro.minigher"
#  - password
ERDDAP_PASSWORD="ien3xei3FahHus?o"

#  === TIME PERIOD ===

# Time period to download for the marine and meteorological products (family
# variables are employed):
#  - starting date (UTC)
DT_START="$(date -d %DATE_START% +%%Y-%%m-%%dT00:00:00Z)"
#DT_START="$(date -d %DATE_START% +%%Y-%%m-%%dT12:00:00Z)"
#  - ending date (UTC)
DT_END="$(date -d %DATE_END% +%%Y-%%m-%%dT23:59:00Z)"
#DT_END="$(date -d %DATE_END% +%%Y-%%m-%%dT12:00:00Z)"
#DT_END="$(date -d "%DATE_END% -1 days" +%%Y-%%m-%%dT12:00:00Z)"

# Time period to download for the hydrological (rivers) products (family
# variables are employed):
#  - starting date (UTC)
DT_START_RIVERS="$(date -d %DATE_START% +%%Y-%%m-%%dT00)%%3A00%%3A00Z"
#  - ending date (UTC)
DT_END_RIVERS="$(date -d %DATE_END% +%%Y-%%m-%%dT23)%%3A00%%3A00Z"

#  === DOMAIN ===

# Domain to download for the marine products:
#  - minimum longitude (°E, in decimal degrees)
MARINE_LON_MIN="12.63"
#MARINE_LON_MIN="12.20"
#  - maximum longitude (°E, in decimal degrees)
MARINE_LON_MAX="13.92"
#MARINE_LON_MAX="13.40"
#  - minimum latitude (°N, in decimal degrees)
MARINE_LAT_MIN="45.07"
#MARINE_LAT_MIN="43.90"
#  - maximum latitude (°N, in decimal degrees)
MARINE_LAT_MAX="45.875"
#MARINE_LAT_MAX="45.50"
#  - minimum depth [m]
MARINE_DEPTH_MIN="0.0"
#  - maximum depth [m]
MARINE_DEPTH_MAX="35.0"
#MARINE_DEPTH_MAX="50.0"

# Domain to download for the meteorological products:
#  - minimum longitude (°E, in decimal degrees)
METEO_LON_MIN="12.55"
#METEO_LON_MIN="12.20"
#  - maximum longitude (°E, in decimal degrees)
METEO_LON_MAX="14.00"
#METEO_LON_MAX="13.40"
#  - minimum latitude (°N, in decimal degrees)
METEO_LAT_MIN="45.00"
#METEO_LAT_MIN="43.90"
#  - maximum latitude (°N, in decimal degrees)
METEO_LAT_MAX="45.95"
#METEO_LAT_MAX="45.50"

#  === PRODUCT TYPE ===

# Product type to download:
#  - ending year of the time period to download
YEAR_END="$(date -d %DATE_END% +%%Y)"
#  - threshold year (historical, ending year < threshold year; projection ->
#    ending year >= threshold year)
TH_YEAR="2021"
#  - product type
if [[ $YEAR_END < $TH_YEAR ]]; then
    ERDDAP_PROD_TYPE="historical"
else
    ERDDAP_PROD_TYPE="projection"
fi

#  === SERVER ===

# Node (server) hosting ERDDAP products (http)
ERDDAP_HOST_HTTP="https://erddap.cmcc-opa.eu/erddap"

# Arrays containing:
#  - the station IDs of the rivers/basins to download
RIVER_IDS=("121" "127" "129" "131" "134" "135" "136" "138" "140" "141" "142" "143" "144")
#  - the name of the rivers/basins associated to the station IDs set above
declare -A RIVERS
RIVERS["121"]="mirna"
RIVERS["127"]="dragonja"
RIVERS["129"]="badasevica"
RIVERS["131"]="rizana"
RIVERS["134"]="lemene"
RIVERS["135"]="tagliamento"
RIVERS["136"]="livenza"
RIVERS["138"]="stella"
RIVERS["140"]="corno"
RIVERS["141"]="natissa"
RIVERS["142"]="cormor"
RIVERS["143"]="isonzo"
RIVERS["144"]="timavo"

# Arrays containing:
#  - the dataset IDs
declare -A ERDDAP_DATASET_ID
ERDDAP_DATASET_ID["votemper"]="adriaclim_resm_nemo_${ERDDAP_PROD_TYPE}_day_T_depth"
ERDDAP_DATASET_ID["vosaline"]="adriaclim_resm_nemo_${ERDDAP_PROD_TYPE}_day_T_depth"
ERDDAP_DATASET_ID["SL_S_ster_avg"]="adriaclim_resm_nemo_${ERDDAP_PROD_TYPE}_3h_sl_calibrated_ster_avg"
ERDDAP_DATASET_ID["vozocrtx"]="adriaclim_resm_nemo_${ERDDAP_PROD_TYPE}_day_U_depth"
ERDDAP_DATASET_ID["vomecrty"]="adriaclim_resm_nemo_${ERDDAP_PROD_TYPE}_day_V_depth"
ERDDAP_DATASET_ID["u_10m_gr"]="6h_7ecc_66b0_eca2"
ERDDAP_DATASET_ID["v_10m_gr"]="6h_2925_45d3_3c6a"
ERDDAP_DATASET_ID["slp"]="adriaclim_resm_wrf_${ERDDAP_PROD_TYPE}_ancillary_slp"
ERDDAP_DATASET_ID["precip_tot"]="adriaclim_resm_wrf_${ERDDAP_PROD_TYPE}_near_surface"
ERDDAP_DATASET_ID["T_2m"]="adriaclim_resm_wrf_${ERDDAP_PROD_TYPE}_near_surface"
ERDDAP_DATASET_ID["q_2m"]="adriaclim_resm_wrf_${ERDDAP_PROD_TYPE}_near_surface"
ERDDAP_DATASET_ID["SW_d"]="adriaclim_resm_wrf_${ERDDAP_PROD_TYPE}_near_surface"
ERDDAP_DATASET_ID["tcc"]="adriaclim_resm_wrf_${ERDDAP_PROD_TYPE}_ancillary"
ERDDAP_DATASET_ID["streamflow_m"]="wrfhydro_${ERDDAP_PROD_TYPE}_2aff_7940_c642"
#  - the URL of the products to download
declare -A ERDDAP_URL
ERDDAP_URL["votemper"]="${ERDDAP_HOST_HTTP}/griddap/${ERDDAP_DATASET_ID['votemper']}.nc?votemper%%5B(${DT_START}):1:(${DT_END})%%5D%%5B(${MARINE_DEPTH_MIN}):1:(${MARINE_DEPTH_MAX})%%5D%%5B(${MARINE_LAT_MAX}):1:(${MARINE_LAT_MIN})%%5D%%5B(${MARINE_LON_MIN}):1:(${MARINE_LON_MAX})%%5D"
ERDDAP_URL["vosaline"]="${ERDDAP_HOST_HTTP}/griddap/${ERDDAP_DATASET_ID['vosaline']}.nc?vosaline%%5B(${DT_START}):1:(${DT_END})%%5D%%5B(${MARINE_DEPTH_MIN}):1:(${MARINE_DEPTH_MAX})%%5D%%5B(${MARINE_LAT_MAX}):1:(${MARINE_LAT_MIN})%%5D%%5B(${MARINE_LON_MIN}):1:(${MARINE_LON_MAX})%%5D"
ERDDAP_URL["SL_S_ster_avg"]="${ERDDAP_HOST_HTTP}/griddap/${ERDDAP_DATASET_ID['SL_S_ster_avg']}.nc?SL_S_ster_avg%%5B(${DT_START}):1:(${DT_END})%%5D%%5B(${MARINE_LAT_MAX}):1:(${MARINE_LAT_MIN})%%5D%%5B(${MARINE_LON_MIN}):1:(${MARINE_LON_MAX})%%5D"
ERDDAP_URL["vozocrtx"]="${ERDDAP_HOST_HTTP}/griddap/${ERDDAP_DATASET_ID['vozocrtx']}.nc?vozocrtx%%5B(${DT_START}):1:(${DT_END})%%5D%%5B(${MARINE_DEPTH_MIN}):1:(${MARINE_DEPTH_MAX})%%5D%%5B(${MARINE_LAT_MAX}):1:(${MARINE_LAT_MIN})%%5D%%5B(${MARINE_LON_MIN}):1:(${MARINE_LON_MAX})%%5D"
ERDDAP_URL["vomecrty"]="${ERDDAP_HOST_HTTP}/griddap/${ERDDAP_DATASET_ID['vomecrty']}.nc?vomecrty%%5B(${DT_START}):1:(${DT_END})%%5D%%5B(${MARINE_DEPTH_MIN}):1:(${MARINE_DEPTH_MAX})%%5D%%5B(${MARINE_LAT_MAX}):1:(${MARINE_LAT_MIN})%%5D%%5B(${MARINE_LON_MIN}):1:(${MARINE_LON_MAX})%%5D"
ERDDAP_URL["u_10m_gr"]="${ERDDAP_HOST_HTTP}/griddap/${ERDDAP_DATASET_ID['u_10m_gr']}.nc?U10%%5B(${DT_START}):1:(${DT_END})%%5D%%5B(${METEO_LAT_MAX}):1:(${METEO_LAT_MIN})%%5D%%5B(${METEO_LON_MIN}):1:(${METEO_LON_MAX})%%5D"
ERDDAP_URL["v_10m_gr"]="${ERDDAP_HOST_HTTP}/griddap/${ERDDAP_DATASET_ID['v_10m_gr']}.nc?V10%%5B(${DT_START}):1:(${DT_END})%%5D%%5B(${METEO_LAT_MAX}):1:(${METEO_LAT_MIN})%%5D%%5B(${METEO_LON_MIN}):1:(${METEO_LON_MAX})%%5D"
ERDDAP_URL["slp"]="${ERDDAP_HOST_HTTP}/griddap/${ERDDAP_DATASET_ID['slp']}.nc?slp%%5B(${DT_START}):1:(${DT_END})%%5D%%5B(${METEO_LAT_MAX}):1:(${METEO_LAT_MIN})%%5D%%5B(${METEO_LON_MIN}):1:(${METEO_LON_MAX})%%5D"
ERDDAP_URL["precip_tot"]="${ERDDAP_HOST_HTTP}/griddap/${ERDDAP_DATASET_ID['precip_tot']}.nc?precip_tot%%5B(${DT_START}):1:(${DT_END})%%5D%%5B(${METEO_LAT_MAX}):1:(${METEO_LAT_MIN})%%5D%%5B(${METEO_LON_MIN}):1:(${METEO_LON_MAX})%%5D"
ERDDAP_URL["T_2m"]="${ERDDAP_HOST_HTTP}/griddap/${ERDDAP_DATASET_ID['T_2m']}.nc?T_2m%%5B(${DT_START}):1:(${DT_END})%%5D%%5B(${METEO_LAT_MAX}):1:(${METEO_LAT_MIN})%%5D%%5B(${METEO_LON_MIN}):1:(${METEO_LON_MAX})%%5D"
ERDDAP_URL["q_2m"]="${ERDDAP_HOST_HTTP}/griddap/${ERDDAP_DATASET_ID['q_2m']}.nc?q_2m%%5B(${DT_START}):1:(${DT_END})%%5D%%5B(${METEO_LAT_MAX}):1:(${METEO_LAT_MIN})%%5D%%5B(${METEO_LON_MIN}):1:(${METEO_LON_MAX})%%5D"
ERDDAP_URL["SW_d"]="${ERDDAP_HOST_HTTP}/griddap/${ERDDAP_DATASET_ID['SW_d']}.nc?SW_d%%5B(${DT_START}):1:(${DT_END})%%5D%%5B(${METEO_LAT_MAX}):1:(${METEO_LAT_MIN})%%5D%%5B(${METEO_LON_MIN}):1:(${METEO_LON_MAX})%%5D"
ERDDAP_URL["tcc"]="${ERDDAP_HOST_HTTP}/griddap/${ERDDAP_DATASET_ID['tcc']}.nc?tcc%%5B(${DT_START}):1:(${DT_END})%%5D%%5B(${METEO_LAT_MAX}):1:(${METEO_LAT_MIN})%%5D%%5B(${METEO_LON_MIN}):1:(${METEO_LON_MAX})%%5D"
ERDDAP_URL["streamflow_m"]="${ERDDAP_HOST_HTTP}/tabledap/${ERDDAP_DATASET_ID['streamflow_m']}.csv?time,streamflow_m&time>=${DT_START_RIVERS}&time<=${DT_END_RIVERS}&station_id=%%RIVER_ID%%"
#  - the basename of the downloaded files (family variables are employed)
declare -A ERDDAP_OUT_FILE
ERDDAP_OUT_FILE["votemper"]="votemper_%DATE_START%-%DATE_END%.nc"
ERDDAP_OUT_FILE["vosaline"]="vosaline_%DATE_START%-%DATE_END%.nc"
ERDDAP_OUT_FILE["SL_S_ster_avg"]="SL_S_ster_avg_%DATE_START%-%DATE_END%.nc"
ERDDAP_OUT_FILE["vozocrtx"]="vozocrtx_%DATE_START%-%DATE_END%.nc"
ERDDAP_OUT_FILE["vomecrty"]="vomecrty_%DATE_START%-%DATE_END%.nc"
ERDDAP_OUT_FILE["u_10m_gr"]="U10_%DATE_START%-%DATE_END%.nc"
ERDDAP_OUT_FILE["v_10m_gr"]="V10_%DATE_START%-%DATE_END%.nc"
ERDDAP_OUT_FILE["slp"]="slp_%DATE_START%-%DATE_END%.nc"
ERDDAP_OUT_FILE["precip_tot"]="precip_tot_%DATE_START%-%DATE_END%.nc"
ERDDAP_OUT_FILE["T_2m"]="T_2m_%DATE_START%-%DATE_END%.nc"
ERDDAP_OUT_FILE["q_2m"]="q_2m_%DATE_START%-%DATE_END%.nc"
ERDDAP_OUT_FILE["SW_d"]="SW_d_%DATE_START%-%DATE_END%.nc"
ERDDAP_OUT_FILE["tcc"]="tcc_%DATE_START%-%DATE_END%.nc"
ERDDAP_OUT_FILE["streamflow_m"]="streamflow_m_%%RIVER%%_%DATE_START%-%DATE_END%.dat"
#  - the basename of the final, post-processed files (family variables are
#    employed)
declare -A SHY_OUT_FILE
SHY_OUT_FILE["votemper"]="temp_%DATE_START%-%DATE_END%.fem"
SHY_OUT_FILE["vosaline"]="salt_%DATE_START%-%DATE_END%.fem"
SHY_OUT_FILE["SL_S_ster_avg"]="zeta_%DATE_START%-%DATE_END%.fem"
SHY_OUT_FILE["currents"]="velo_%DATE_START%-%DATE_END%.fem"
SHY_OUT_FILE["precip_tot"]="rain_%DATE_START%-%DATE_END%.fem"
SHY_OUT_FILE["wind"]="wind_%DATE_START%-%DATE_END%.fem"
SHY_OUT_FILE["heat"]="heat_%DATE_START%-%DATE_END%.fem"
SHY_OUT_FILE["streamflow_m"]="${ERDDAP_OUT_FILE['streamflow_m']}"

# Arrays containing:
#  - the strings to be employed with the "-vars" option of the "nc2fem"
#    SHYFEM's routine
declare -A NC2FEM_VARS
NC2FEM_VARS["votemper"]="votemper"
NC2FEM_VARS["vosaline"]="vosaline"
NC2FEM_VARS["SL_S_ster_avg"]="SL_S_ster_avg"
NC2FEM_VARS["currents"]="vozocrtx,vomecrty"
NC2FEM_VARS["precip_tot"]="precip_tot"
NC2FEM_VARS["wind"]="U10,V10,slp"
NC2FEM_VARS["heat"]="SW_d,T_2m,q_2m,tcc"
#  - the strings to be employed with the "-descrp" option of the "nc2fem"
#    SHYFEM's routine
declare -A NC2FEM_DESCRP
NC2FEM_DESCRP["votemper"]="temp"
NC2FEM_DESCRP["vosaline"]="salt"
NC2FEM_DESCRP["SL_S_ster_avg"]="zeta"
NC2FEM_DESCRP["currents"]="vel,vel"
NC2FEM_DESCRP["precip_tot"]="rain"
NC2FEM_DESCRP["wind"]="wind,wind,airp"
NC2FEM_DESCRP["heat"]="srad,tair,shum,cc"


# ************************
# * PATHS of DIRECTORIES *
# ************************

#  === SCRATCH ===

# Scratch directory
SCRATCH_DIR="/lustre/arpa/scratch/AdriaClim"
# Scratch directory dedicated to all the stuff related to the ERDDAP data
# server
SCRATCH_ERDDAP_DIR="${SCRATCH_DIR}/ERDDAP"
# Subdirectory of the ERDDAP's scratch directory, which is dedicated to the
# data download
SCRATCH_ERDDAP_DOWNLOAD_DIR="${SCRATCH_ERDDAP_DIR}/download"
# Subdirectory of the ERDDAP download's scratch directory, which is dedicated
# to a specific field and time period
declare -A SCRATCH_ERDDAP_DOWNLOAD_DIR_TMP
SCRATCH_ERDDAP_DOWNLOAD_DIR_TMP["votemper"]="${SCRATCH_ERDDAP_DOWNLOAD_DIR}/votemper_%DATE_START%-%DATE_END%"
SCRATCH_ERDDAP_DOWNLOAD_DIR_TMP["vosaline"]="${SCRATCH_ERDDAP_DOWNLOAD_DIR}/vosaline_%DATE_START%-%DATE_END%"
SCRATCH_ERDDAP_DOWNLOAD_DIR_TMP["SL_S_ster_avg"]="${SCRATCH_ERDDAP_DOWNLOAD_DIR}/SL_S_ster_avg_%DATE_START%-%DATE_END%"
SCRATCH_ERDDAP_DOWNLOAD_DIR_TMP["vozocrtx"]="${SCRATCH_ERDDAP_DOWNLOAD_DIR}/vozocrtx_%DATE_START%-%DATE_END%"
SCRATCH_ERDDAP_DOWNLOAD_DIR_TMP["vomecrty"]="${SCRATCH_ERDDAP_DOWNLOAD_DIR}/vomecrty_%DATE_START%-%DATE_END%"
SCRATCH_ERDDAP_DOWNLOAD_DIR_TMP["currents"]="${SCRATCH_ERDDAP_DOWNLOAD_DIR}/currents_%DATE_START%-%DATE_END%"
SCRATCH_ERDDAP_DOWNLOAD_DIR_TMP["u_10m_gr"]="${SCRATCH_ERDDAP_DOWNLOAD_DIR}/U10_%DATE_START%-%DATE_END%"
SCRATCH_ERDDAP_DOWNLOAD_DIR_TMP["v_10m_gr"]="${SCRATCH_ERDDAP_DOWNLOAD_DIR}/V10_%DATE_START%-%DATE_END%"
SCRATCH_ERDDAP_DOWNLOAD_DIR_TMP["slp"]="${SCRATCH_ERDDAP_DOWNLOAD_DIR}/slp_%DATE_START%-%DATE_END%"
SCRATCH_ERDDAP_DOWNLOAD_DIR_TMP["precip_tot"]="${SCRATCH_ERDDAP_DOWNLOAD_DIR}/precip_tot_%DATE_START%-%DATE_END%"
SCRATCH_ERDDAP_DOWNLOAD_DIR_TMP["T_2m"]="${SCRATCH_ERDDAP_DOWNLOAD_DIR}/T_2m_%DATE_START%-%DATE_END%"
SCRATCH_ERDDAP_DOWNLOAD_DIR_TMP["q_2m"]="${SCRATCH_ERDDAP_DOWNLOAD_DIR}/q_2m_%DATE_START%-%DATE_END%"
SCRATCH_ERDDAP_DOWNLOAD_DIR_TMP["SW_d"]="${SCRATCH_ERDDAP_DOWNLOAD_DIR}/SW_d_%DATE_START%-%DATE_END%"
SCRATCH_ERDDAP_DOWNLOAD_DIR_TMP["tcc"]="${SCRATCH_ERDDAP_DOWNLOAD_DIR}/tcc_%DATE_START%-%DATE_END%"
SCRATCH_ERDDAP_DOWNLOAD_DIR_TMP["streamflow_m"]="${SCRATCH_ERDDAP_DOWNLOAD_DIR}/streamflow_m_%DATE_START%-%DATE_END%"
SCRATCH_ERDDAP_DOWNLOAD_DIR_TMP["heat"]="${SCRATCH_ERDDAP_DOWNLOAD_DIR}/heat_%DATE_START%-%DATE_END%"
SCRATCH_ERDDAP_DOWNLOAD_DIR_TMP["wind"]="${SCRATCH_ERDDAP_DOWNLOAD_DIR}/wind_%DATE_START%-%DATE_END%"

# === DATA ===

# Data directory related to the INTERREG IT-HR AdriaClim project
DATA_DIR="/lustre/arpa/AdriaClim/data"
# AdriaClim's data directory dedicated to SHYFEM inputs
DATA_SHY_INPUT_DIR="${DATA_DIR}/shyfem_inputs"
# AdriaClim's SHYFEM inputs directory dedicated to data retrieved ERDDAP data
# server
DATA_SHY_INPUT_ERDDAP_DIR="${DATA_SHY_INPUT_DIR}/ERDDAP"
# AdriaClim's ERDDAP SHYFEM inputs directory dedicated to a specific type of
# data (marine, meteorological and hydrological)
declare -A DATA_SHY_INPUT_ERDDAP_DT_DIR
DATA_SHY_INPUT_ERDDAP_DT_DIR["votemper"]="${DATA_SHY_INPUT_ERDDAP_DIR}/marine"
DATA_SHY_INPUT_ERDDAP_DT_DIR["vosaline"]="${DATA_SHY_INPUT_ERDDAP_DIR}/marine"
DATA_SHY_INPUT_ERDDAP_DT_DIR["SL_S_ster_avg"]="${DATA_SHY_INPUT_ERDDAP_DIR}/marine"
DATA_SHY_INPUT_ERDDAP_DT_DIR["currents"]="${DATA_SHY_INPUT_ERDDAP_DIR}/marine"
DATA_SHY_INPUT_ERDDAP_DT_DIR["precip_tot"]="${DATA_SHY_INPUT_ERDDAP_DIR}/meteo"
DATA_SHY_INPUT_ERDDAP_DT_DIR["heat"]="${DATA_SHY_INPUT_ERDDAP_DIR}/meteo"
DATA_SHY_INPUT_ERDDAP_DT_DIR["wind"]="${DATA_SHY_INPUT_ERDDAP_DIR}/meteo"
DATA_SHY_INPUT_ERDDAP_DT_DIR["streamflow_m"]="${DATA_SHY_INPUT_ERDDAP_DIR}/rivers"

# === CODES ===

# Directory containing all the scripts developed in the frame of the INTERREG
# IT-HR AdriaClim project. It is arranged in subdirectories, each containing a
# specific type of script
SCRIPTS_DIR="/lustre/arpa/AdriaClim/src/codes"
# Directory containing all the scripts developed in the frame of the INTERREG
# IT-HR AdriaClim project and related to SHYFEM
SHY_SCRIPTS_DIR="${SCRIPTS_DIR}/shyfem"
# Directory containing job scripts and templates, related to SHYFEM
SHY_JOBS_DIR="${SHY_SCRIPTS_DIR}/jobs"


# ********
# * JOBS *
# ********

# === GENERAL DIRECTIVES ===

# Name of the project the jobs belong to
JOB_P="AdriaClim"
# Permissions of job's output files
JOB_W_umask="0002"
# Submission block until job is done
JOB_W_block="true"
# Name of the queue the jobs are assigned
JOB_q="arpa"
# For what sending e-mails (a=abort, b=begin, e=end)
JOB_m="abe"
# E-mail address to which sending notifications
JOB_M="alessandro.minigher@arpa.fvg.it"

# === JOBS and SPECIFIC DIRECTIVES ===

# Post-processing of marine products
JOB_MARINE_NC2FEM_TPL="${SHY_JOBS_DIR}/ERDDAP_marine_nc2fem.job.tpl"
JOB_MARINE_NC2FEM_TPL_N="marine_nc2fem"          # name of the job
JOB_MARINE_NC2FEM_TPL_o="marine_nc2fem_stdout"   # name of the standard output
JOB_MARINE_NC2FEM_TPL_e="marine_nc2fem_stderr"   # name of the standard error
JOB_MARINE_NC2FEM_TPL_l_nodes=1                  # number of nodes
JOB_MARINE_NC2FEM_TPL_l_ppn=1                    # number of cores per node
JOB_MARINE_NC2FEM_TPL_l_walltime="00:02:00"      # walltime

# Post-processing of marine "currents" products
JOB_CURRENTS_NC2FEM_TPL="${SHY_JOBS_DIR}/ERDDAP_currents_nc2fem.job.tpl"
JOB_CURRENTS_NC2FEM_TPL_N="currents_nc2fem"          # name of the job
JOB_CURRENTS_NC2FEM_TPL_o="currents_nc2fem_stdout"   # name of the standard output
JOB_CURRENTS_NC2FEM_TPL_e="currents_nc2fem_stderr"   # name of the standard error
JOB_CURRENTS_NC2FEM_TPL_l_nodes=1                  # number of nodes
JOB_CURRENTS_NC2FEM_TPL_l_ppn=1                    # number of cores per node
JOB_CURRENTS_NC2FEM_TPL_l_walltime="00:02:00"      # walltime

# Post-processing of meteorological "wind" products
JOB_WIND_NC2FEM_TPL="${SHY_JOBS_DIR}/ERDDAP_wind_nc2fem.job.tpl"
JOB_WIND_NC2FEM_TPL_N="wind_nc2fem"          # name of the job
JOB_WIND_NC2FEM_TPL_o="wind_nc2fem_stdout"   # name of the standard output
JOB_WIND_NC2FEM_TPL_e="wind_nc2fem_stderr"   # name of the standard error
JOB_WIND_NC2FEM_TPL_l_nodes=1                # number of nodes
JOB_WIND_NC2FEM_TPL_l_ppn=1                  # number of cores per node
JOB_WIND_NC2FEM_TPL_l_walltime="00:02:00"    # walltime

# Post-processing of meteorological "heat" products
JOB_HEAT_NC2FEM_TPL="${SHY_JOBS_DIR}/ERDDAP_heat_nc2fem.job.tpl"
JOB_HEAT_NC2FEM_TPL_N="heat_nc2fem"          # name of the job
JOB_HEAT_NC2FEM_TPL_o="heat_nc2fem_stdout"   # name of the standard output
JOB_HEAT_NC2FEM_TPL_e="heat_nc2fem_stderr"   # name of the standard error
JOB_HEAT_NC2FEM_TPL_l_nodes=1                # number of nodes
JOB_HEAT_NC2FEM_TPL_l_ppn=1                  # number of cores per node
JOB_HEAT_NC2FEM_TPL_l_walltime="00:02:00"    # walltime

# Post-processing of meteorological "rain" products
JOB_RAIN_NC2FEM_TPL="${SHY_JOBS_DIR}/ERDDAP_rain_nc2fem.job.tpl"
JOB_RAIN_NC2FEM_TPL_N="rain_nc2fem"          # name of the job
JOB_RAIN_NC2FEM_TPL_o="rain_nc2fem_stdout"   # name of the standard output
JOB_RAIN_NC2FEM_TPL_e="rain_nc2fem_stderr"   # name of the standard error
JOB_RAIN_NC2FEM_TPL_l_nodes=1                # number of nodes
JOB_RAIN_NC2FEM_TPL_l_ppn=1                  # number of cores per node
JOB_RAIN_NC2FEM_TPL_l_walltime="00:02:00"    # walltime

# Post-processing of hydrological (rivers) products
JOB_RIVER_FORMATTER_TPL="${SHY_JOBS_DIR}/ERDDAP_river_formatter.job.tpl"
JOB_RIVER_FORMATTER_TPL_N="river_formatter"          # name of the job
JOB_RIVER_FORMATTER_TPL_o="river_formatter_stdout"   # name of the standard output
JOB_RIVER_FORMATTER_TPL_e="river_formatter_stderr"   # name of the standard error
JOB_RIVER_FORMATTER_TPL_l_nodes=1                    # number of nodes
JOB_RIVER_FORMATTER_TPL_l_ppn=1                      # number of cores per node
JOB_RIVER_FORMATTER_TPL_l_walltime="00:01:00"        # walltim


# *************************
# * ENVIRONMENTAL MODULES *
# *************************

# Environmental module for CDO usage
CDO_MOD="cdo/1.9.8/intel/19.1.1.217-prtc7xl"
# Environmental module for SHYFEM usage
SHY_MOD="arpa shyfem/7.5.71"
