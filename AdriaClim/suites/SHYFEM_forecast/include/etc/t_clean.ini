#******************************************************************************
#                     Initialization file of t_clean task                     *
#******************************************************************************
#
#  All parameters and variables required for the removal of producs not needed
#  anymore.
#  Preamble name is: DATA_CLN_
#
#  The removal tasks are defined by means of the DATA_CLN_ACT array.
#  Each element of the array is an removal action to be performed.
#  A task describes what actions should be taken on the files to be
#  removed. Each parameter of the action is colon (;) separated.
#
#******************************************************************************

    DATA_CLN_DATE="%ECF_DATE%"                  # This is the date to be used a default for removal purposes
    DATA_CLN_HOUR="%ECF_TIME%"                  # This is the hour to be used a default for removal purposes
    DATA_CLN_ROOT_DIR="${output_root_dir}"      # Root directory for searching files to be removed
    DATA_CLN_MAX_AGE_ARC="0"                    # Maximum age (days) of the archived files; older ones will be removed
    DATA_CLN_MAX_AGE_TMP="7"                    # Maximum age (days) of the temporary archived files; older ones will be removed
    DATA_CLN_MAX_AGE_ARC_PLOTS="30"             # Max AGE for public shared plots EXPRESSED IN DAYS. 
    DATA_CLN_MAX_AGE_ARC_CSV="30"               # Max AGE for public shared csv   EXPRESSED IN DAYS.    
  
    declare -a DATA_CLN_ACT                           # This is the array of tasks
              #       +---------------- Forced removal in case of not matching permissions
              #       |                   a = y --> Force removal even if permissions do not allow
              #       |                   a = n --> Do not force removal (default if not set)
              #       |
              #       | +-------------- Recoursive removal in case of directory. BE CAREFUL ALL FILES
              #       | |                 BE CAREFUL ALL FILES WILL BE REMOVED REGARDLESS ANY OTHER CODITION
              #       | |                 b = y --> Recoursive removal
              #       | |                 b = n --> Do not remove recoursively subdirectories (default if not set)
              #       | |
              #       | | +------------ Minimum Age of the files or directory to be removed according the -mmin +n
              #       | | |               option of find utility. File's data was last modified more than n minutes ago
              #       | | |               The age is defined in minutes (integer); if not set, default is zero.
              #       | | |
              #       | | | +---------- Minimum size of the files or directory to be removed according the -size +nc
              #       | | | |             option of find utility. File's having size greather than n bytes are removed
              #       | | | |             The size is defined in bytes (integer); if not set, default is zero.
              #       | | | |
              #       | | | | +-------- Root directory where to start the search of files to be
              #       | | | | |         removed. According to the find utility.
              #       | | | | |
              #       | | | | | +------ File[s] to be removed: wild characters are allowed and
              #       | | | | | |       recursive search in subdirectories is the default, according find utility.
              #       | | | | | |       Search starts from the root directory (R) parameter.
              #       | | | | | |
              #       | | | | | | +---- File[s] to be exluded from removal: wild characters are
              #       | | | | | | |     allowed and recursive search in subdirectories is the default
              #       | | | | | | |     Leave unfilled if no filter for exlusion should be applied
              #       | | | | | | |
    #DATA_CLN_ACT[0]="a;b;c;d;R;F;X"
 
#======================================================================================================================================================

    DATA_CLN_ARCDIR_PLOTS="${output_root_dir}"
    DATA_CLN_ARCDIR_CSV="${output_root_dir}"
 
    # Arc-paths creation for folder remotion
    DATA_CLN_ARCDIR_PLOTS_DIR="${output_dir_tpl//%%year%%/20[0-9][0-9]}"
    DATA_CLN_ARCDIR_PLOTS_DIR="${DATA_CLN_ARCDIR_PLOTS_DIR//%%month%%/[0-1][0-9]}"
    DATA_CLN_ARCDIR_PLOTS_DIR="${DATA_CLN_ARCDIR_PLOTS_DIR//%%day%%/[0-3][0-9]}"

    # Arc-paths creation for csv folder remotion
    DATA_CLN_ARCDIR_CSV_DIR="${output_dir_csv_tpl//%%year%%/20[0-9][0-9]}"
    DATA_CLN_ARCDIR_CSV_DIR="${DATA_CLN_ARCDIR_CSV_DIR//%%month%%/[0-1][0-9]}"
    DATA_CLN_ARCDIR_CSV_DIR="${DATA_CLN_ARCDIR_CSV_DIR//%%day%%/[0-3][0-9]}"

    # remove old plots (png, gif)
    unset  -v  DATA_CLN_ACT
    DATA_CLN_ACT[0]="n;y;$(( ${DATA_CLN_MAX_AGE_ARC_PLOTS}*1440 ));;${DATA_CLN_ARCDIR_PLOTS};*.png;"
    DATA_CLN_ACT[1]="n;y;$(( ${DATA_CLN_MAX_AGE_ARC_PLOTS}*1440 ));;${DATA_CLN_ARCDIR_PLOTS};*.gif;"
    # remove old csv files
    DATA_CLN_ACT[2]="n;y;$(( ${DATA_CLN_MAX_AGE_ARC_CSV}*1440 ));;${DATA_CLN_ARCDIR_CSV};*.2d.*;"
    DATA_CLN_ACT[3]="n;y;$(( ${DATA_CLN_MAX_AGE_ARC_CSV}*1440 ));;${DATA_CLN_ARCDIR_CSV};*.3d.*;"

    # within data/FORECAST remove bulletin date folder, if empty

    # plots tree remotion
    i=1;
    index="${#DATA_CLN_ACT[@]}"
    lim_max=5   # lim_max is only a security limit to avoid infinite cycles.

    while [[ "${DATA_CLN_ARCDIR_PLOTS_DIR}" != "${DATA_CLN_ARCDIR_PLOTS}" && ${i} -lt ${lim_max} ]]; do
        dir_tmp="${DATA_CLN_ARCDIR_PLOTS_DIR%%/*}"           # the same as 'dirname'
        dir_sub_tmp="${DATA_CLN_ARCDIR_PLOTS_DIR##*/}"       # the same as 'basename'

        DATA_CLN_ACT[${index}]="n;n;$(( ${DATA_CLN_MAX_AGE_ARC}*1440 ));;${dir_tmp};${dir_sub_tmp};"
        DATA_CLN_ARCDIR_PLOTS_DIR="${dir_tmp}" || { echo "Something has gone wrong in the DATA_CLN_ARCDIR_PLOTS_DIR cycle process."; break; };
        (( i+=1 ))
        (( index+=1 ))
    done 

    # csv tree remotion
    i=1;
    index="${#DATA_CLN_ACT[@]}"

    while [[ "${DATA_CLN_ARCDIR_CSV_DIR}" != "${DATA_CLN_ARCDIR_CSV}" && ${i} -lt ${lim_max} ]]; do
        dir_tmp="${DATA_CLN_ARCDIR_CSV_DIR%%/*}"           # the same as 'dirname'
        dir_sub_tmp="${DATA_CLN_ARCDIR_CSV_DIR##*/}"       # the same as 'basename'

        if [[ ! " ${DATA_CLN_ACT[*]} " =~ " n;n;$(( ${DATA_CLN_MAX_AGE_ARC}*1440 ));;${dir_tmp};${dir_sub_tmp}; " ]]; then
            DATA_CLN_ACT[${index}]="n;n;$(( ${DATA_CLN_MAX_AGE_ARC}*1440 ));;${dir_tmp};${dir_sub_tmp};"
        fi
        DATA_CLN_ARCDIR_CSV_DIR="${dir_tmp}" || { echo "Something has gone wrong in the DATA_CLN_ARCDIR_PLOTS_DIR cycle process."; break; };
        (( i+=1 ))
        (( index+=1 ))
    done


    echo "The 'DATA_CLN_ACT[@]' elements are:"
    printf '%%s\n' "${DATA_CLN_ACT[@]}"

    # remove public_html files for web share. After this the suite analysis will put the new FORECASTS image with a younger bulletin date
    # the images will be replaced. Not deleted and then replaced
    # remove public_html/FORECAST empty directories
